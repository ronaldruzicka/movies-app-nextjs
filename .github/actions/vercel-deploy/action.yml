name: 'Vercel Deploy'
description: 'Deploy a Next.js app to Vercel using the Vercel CLI with environment input via pnpm dlx'

outputs:
  deployment-url:
    description: 'The deployment URL'
    value: ${{ steps.deploy-preview.outputs.deployment-url || steps.deploy-production.outputs.deployment-url }}
  inspect-url:
    description: 'The Vercel inspect URL'
    value: ${{ steps.deploy-preview.outputs.inspect-url || steps.deploy-production.outputs.inspect-url }}

inputs:
  environment:
    description: 'Target environment to deploy to (production or preview)'
    required: true

# Gets VERCEL_TOKEN from caller workflow secrets
runs:
  using: 'composite'
  steps:
    - name: Prepare Node project
      uses: ./.github/actions/prepare

    - name: Pull Vercel environment information
      shell: bash
      run: pnpm dlx vercel@latest pull --yes --environment "${{ inputs.environment }}" --token "$VERCEL_TOKEN"

    - name: Build (preview)
      if: ${{ inputs.environment != 'production' }}
      shell: bash
      run: pnpm dlx vercel@latest build --token "$VERCEL_TOKEN"

    - name: Build (production)
      if: ${{ inputs.environment == 'production' }}
      shell: bash
      run: pnpm dlx vercel@latest build --prod --token "$VERCEL_TOKEN"

    - name: Deploy to Vercel (preview)
      id: deploy-preview
      if: ${{ inputs.environment != 'production' }}
      shell: bash
      run: bash ./.github/scripts/deploy-vercel.sh

    - name: Deploy to Vercel (production)
      id: deploy-production
      if: ${{ inputs.environment == 'production' }}
      shell: bash
      run: bash ./.github/scripts/deploy-vercel.sh --prod

    - name: Comment on PR
      if: ${{ github.event_name == 'pull_request' && inputs.environment != 'production' }}
      uses: actions/github-script@v7
      with:
        script: |
          const previewUrl = '${{ steps.deploy-preview.outputs.preview-url }}';
          const deploymentUrl = '${{ steps.deploy-preview.outputs.deployment-url }}';

          const comment = `## ðŸš€ Deployment Complete

          **Preview URL:** ${previewUrl}
          **Deployment details:** ${deploymentUrl}

          Deployed from commit: ${context.sha.substring(0, 7)}`;

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });
